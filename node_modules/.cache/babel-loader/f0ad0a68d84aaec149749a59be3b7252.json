{"ast":null,"code":"import _slicedToArray from \"/home/dana/job_interviews/NextDevs/home_assignment/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dana/job_interviews/NextDevs/home_assignment/material-dashboard-react-master/src/views/Register/Register.js\";\n\nimport React, { useState } from 'react';\nimport Card from '../../components/Card/Card';\nimport Button from 'components/CustomButtons/Button';\nimport GridItem from 'components/Grid/GridItem';\nimport CardFooter from 'components/Card/CardFooter';\nimport CardHeader from 'components/Card/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { registerApi } from '../../lib/api';\nimport Grid from '@material-ui/core/Grid';\nvar styles = {\n  cardCategoryWhite: {\n    color: 'rgba(255,255,255,.62)',\n    margin: '0',\n    fontSize: '14px',\n    marginTop: '0',\n    marginBottom: '0'\n  },\n  cardTitleWhite: {\n    color: '#FFFFFF',\n    marginTop: '0px',\n    minHeight: 'auto',\n    fontWeight: '300',\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: '3px',\n    textDecoration: 'none'\n  }\n};\nvar useStyles = makeStyles(styles);\n\nvar Register = function Register() {\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      firstName = _useState6[0],\n      setFirstName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastName = _useState8[0],\n      setLastName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passwordConfirm = _useState12[0],\n      setPasswordConfirm = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      lessThenSix = _useState14[0],\n      setLessThenSix = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      passwordConfirmNoMatch = _useState16[0],\n      setPasswordConfirmNoMatch = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      userExist = _useState18[0],\n      setUserExist = _useState18[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var errors = passwordErrors();\n\n    if (errors) {\n      return;\n    }\n\n    var newUser = {\n      username: username,\n      email: email,\n      firstName: firstName,\n      lastName: lastName,\n      password: password,\n      passwordConfirm: passwordConfirm\n    };\n    registerApi(newUser).then(function (response) {\n      console.log(response.data);\n    })[\"catch\"](function (err) {\n      if (err.response.data.message.includes('duplicate')) {\n        setUserExist(true);\n      }\n    });\n  };\n\n  var passwordErrors = function passwordErrors() {\n    var errors = false;\n    setLessThenSix(false);\n    setPasswordConfirmNoMatch(false);\n    setUserExist(false);\n\n    if (password.length < 6) {\n      setLessThenSix(true);\n      errors = true;\n    } else if (passwordConfirm !== password) {\n      setPasswordConfirmNoMatch(true);\n      errors = true;\n    }\n\n    return errors;\n  };\n\n  var atLeastSixMassage = function atLeastSixMassage() {\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"p\",\n      color: \"error\",\n      noWrap: true,\n      className: classes.toolbarTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, \"*Password must contain at least 6 characters\");\n  };\n\n  var passwordConfirmFail = function passwordConfirmFail() {\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"p\",\n      color: \"error\",\n      noWrap: true,\n      className: classes.toolbarTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, \"*Passwords must match\");\n  };\n\n  var userAlreadyExists = function userAlreadyExists() {\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      color: \"error\",\n      noWrap: true,\n      className: classes.toolbarTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, \"User already exists\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Register Form\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function onSubmit(event) {\n      return handleSubmit(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"username\",\n    label: \"Username\",\n    type: \"text\",\n    id: \"username\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onInput: function onInput(event) {\n      return setUsername(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"email\",\n    label: \"Email Address\",\n    type: \"email\",\n    id: \"email\",\n    pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onInput: function onInput(event) {\n      return setEmail(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"firstName\",\n    label: \"First Name\",\n    type: \"text\",\n    id: \"firstName\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onInput: function onInput(event) {\n      return setFirstName(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"lastName\",\n    label: \"Last Name\",\n    type: \"text\",\n    id: \"lastName\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onInput: function onInput(event) {\n      return setLastName(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onInput: function onInput(event) {\n      return setPassword(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }), lessThenSix && atLeastSixMassage())), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"passwordConfirm\",\n    label: \"Password Confirm\",\n    type: \"password\",\n    id: \"passwordConfirm\",\n    formControlProps: {\n      fullWidth: true\n    },\n    onInput: function onInput(event) {\n      return setPasswordConfirm(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }), passwordConfirmNoMatch && passwordConfirmFail())), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, userExist && userAlreadyExists()), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, \"Register\")))))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/dana/job_interviews/NextDevs/home_assignment/material-dashboard-react-master/src/views/Register/Register.js"],"names":["React","useState","Card","Button","GridItem","CardFooter","CardHeader","makeStyles","CardBody","GridContainer","TextField","Typography","registerApi","Grid","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","Register","classes","username","setUsername","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","passwordConfirm","setPasswordConfirm","lessThenSix","setLessThenSix","passwordConfirmNoMatch","setPasswordConfirmNoMatch","userExist","setUserExist","handleSubmit","event","preventDefault","errors","passwordErrors","newUser","then","response","console","log","data","err","message","includes","length","atLeastSixMassage","toolbarTitle","passwordConfirmFail","userAlreadyExists","fullWidth","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Card from '../../components/Card/Card';\nimport Button from 'components/CustomButtons/Button';\nimport GridItem from 'components/Grid/GridItem';\nimport CardFooter from 'components/Card/CardFooter';\nimport CardHeader from 'components/Card/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { registerApi } from '../../lib/api';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = {\n  cardCategoryWhite: {\n    color: 'rgba(255,255,255,.62)',\n    margin: '0',\n    fontSize: '14px',\n    marginTop: '0',\n    marginBottom: '0',\n  },\n  cardTitleWhite: {\n    color: '#FFFFFF',\n    marginTop: '0px',\n    minHeight: 'auto',\n    fontWeight: '300',\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: '3px',\n    textDecoration: 'none',\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nconst Register = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [lessThenSix, setLessThenSix] = useState(false);\n  const [passwordConfirmNoMatch, setPasswordConfirmNoMatch] = useState(false);\n  const [userExist, setUserExist] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const errors = passwordErrors();\n\n    if (errors) {\n      return;\n    }\n\n    const newUser = {\n      username,\n      email,\n      firstName,\n      lastName,\n      password,\n      passwordConfirm,\n    };\n\n    registerApi(newUser)\n      .then((response) => {\n        console.log(response.data);\n      })\n      .catch((err) => {\n        if (err.response.data.message.includes('duplicate')) {\n          setUserExist(true);\n        }\n      });\n  };\n\n  const passwordErrors = () => {\n    let errors = false;\n\n    setLessThenSix(false);\n    setPasswordConfirmNoMatch(false);\n    setUserExist(false);\n\n    if (password.length < 6) {\n      setLessThenSix(true);\n      errors = true;\n    } else if (passwordConfirm !== password) {\n      setPasswordConfirmNoMatch(true);\n      errors = true;\n    }\n\n    return errors;\n  };\n\n  const atLeastSixMassage = () => {\n    return (\n      <Typography\n        variant='p'\n        color='error'\n        noWrap\n        className={classes.toolbarTitle}\n      >\n        *Password must contain at least 6 characters\n      </Typography>\n    );\n  };\n\n  const passwordConfirmFail = () => {\n    return (\n      <Typography\n        variant='p'\n        color='error'\n        noWrap\n        className={classes.toolbarTitle}\n      >\n        *Passwords must match\n      </Typography>\n    );\n  };\n\n  const userAlreadyExists = () => {\n    return (\n      <Typography\n        variant='h2'\n        color='error'\n        noWrap\n        className={classes.toolbarTitle}\n      >\n        User already exists\n      </Typography>\n    );\n  };\n\n  return (\n    <>\n      <GridItem xs={12} sm={12} md={8}>\n        <Card>\n          <CardHeader color='primary'>\n            <h4 className={classes.cardTitleWhite}>Register Form</h4>\n          </CardHeader>\n\n          <CardBody>\n            <form onSubmit={(event) => handleSubmit(event)}>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={6}>\n                  <TextField\n                    margin='normal'\n                    required\n                    fullWidth\n                    name='username'\n                    label='Username'\n                    type='text'\n                    id='username'\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                    onInput={(event) => setUsername(event.target.value)}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <TextField\n                    margin='normal'\n                    required\n                    fullWidth\n                    name='email'\n                    label='Email Address'\n                    type='email'\n                    id='email'\n                    pattern='[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$'\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                    onInput={(event) => setEmail(event.target.value)}\n                  />\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={6}>\n                  <TextField\n                    margin='normal'\n                    required\n                    fullWidth\n                    name='firstName'\n                    label='First Name'\n                    type='text'\n                    id='firstName'\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                    onInput={(event) => setFirstName(event.target.value)}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <TextField\n                    margin='normal'\n                    required\n                    fullWidth\n                    name='lastName'\n                    label='Last Name'\n                    type='text'\n                    id='lastName'\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                    onInput={(event) => setLastName(event.target.value)}\n                  />\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  <TextField\n                    margin='normal'\n                    required\n                    fullWidth\n                    name='password'\n                    label='Password'\n                    type='password'\n                    id='password'\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                    onInput={(event) => setPassword(event.target.value)}\n                  />\n\n                  {lessThenSix && atLeastSixMassage()}\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  <TextField\n                    margin='normal'\n                    required\n                    fullWidth\n                    name='passwordConfirm'\n                    label='Password Confirm'\n                    type='password'\n                    id='passwordConfirm'\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                    onInput={(event) => setPasswordConfirm(event.target.value)}\n                  />\n\n                  {passwordConfirmNoMatch && passwordConfirmFail()}\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <Grid item xs={12} sm={6}>\n                  <CardFooter>\n                    <GridItem>{userExist && userAlreadyExists()}</GridItem>\n                    <Button color='primary' type='submit'>\n                      Register\n                    </Button>\n                  </CardFooter>\n                </Grid>\n              </GridContainer>\n            </form>\n          </CardBody>\n        </Card>\n      </GridItem>\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}